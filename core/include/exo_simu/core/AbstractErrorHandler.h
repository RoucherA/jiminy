///////////////////////////////////////////////////////////////////////////////
///
/// \brief             Define error handler API.
/// \copyright         Wandercraft
///
////////////////////////////////////////////////////////////////////////////////

#ifndef WDC_DEFINITION_ABSTRACT_ERROR_HANDLER_H
#define WDC_DEFINITION_ABSTRACT_ERROR_HANDLER_H


namespace exo_simu
{
namespace error
{
    class AbstractErrorHandler
    {
    public:
        ////////////////////////////////////////////////////////////////////////////////////
        /// \brief Destructor.
        ////////////////////////////////////////////////////////////////////////////////////
        virtual ~AbstractErrorHandler()
        {
            // Empty on purpose.
        }

        ////////////////////////////////////////////////////////////////////////////////////
        /// \brief Callback of critical error report.
        ///
        /// \details The critical level may be recoverable and means that a critical condition
        /// occurred (i.e. hardware failure).
        ////////////////////////////////////////////////////////////////////////////////////
        virtual void critical() = 0;

        ////////////////////////////////////////////////////////////////////////////////////
        /// \brief Callback of alert error report.
        ///
        /// \details The alert level is unrecoverable and means something bad happened and
        /// action must be taken immediately (i.e. falling detected).
        ////////////////////////////////////////////////////////////////////////////////////
        virtual void alert() = 0;

        ////////////////////////////////////////////////////////////////////////////////////
        /// \brief Callback of emergency error report.
        ///
        /// \details The emergency level is unrecoverable and means that the software itself
        /// can't run properly (i.e. the software can't access the time reference anymore).
        ////////////////////////////////////////////////////////////////////////////////////
        virtual void emergency() = 0;
    };
}
}

#endif
